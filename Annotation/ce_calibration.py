import tritonclient.grpc as grpcclient
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import RANSACRegressor

def get_spectral_angle(intensities):
    pred= np.array(intensities[0])
    true = np.array(intensities[1])
    epsilon = 1e-7
    list_1 = np.argwhere(true>0)
    list_2 = np.argwhere(pred>0)
    indices = np.union1d(list_1,list_2)
    pred_masked = pred[indices]
    true_masked = true[indices]
    true_masked += epsilon
    pred_masked += epsilon
    true_norm = true_masked*(1/np.sqrt(np.sum(np.square(true_masked), axis=0)))
    pred_norm = pred_masked*(1/np.sqrt(np.sum(np.square(pred_masked), axis=0)))
    product = np.sum(true_norm*pred_norm, axis=0)
    arccos = np.arccos(product)
    return 1-2*arccos/np.pi

data = {
    "SEQUENCES": ["AA", "PEPTIPEPTIPEPTIPEPTIPEPTIPEPT", "RHKDESTNQCGPAVILMFYW", "RHKDESTNQC[UNIMOD:4]GPAVILMFYW", "RHKDESTNQCGPAVILM[UNIMOD:35]FYW"],
    "PRECURSOR_CHARGE": [2,2,1,1,2],
    "COLLISION_ENERGY": [25,14,18.2,20,24.2],
    "INTENSITIES": [[ 1.27333492e-01, 1.30561966e-06, 1.30561966e-06,1.30561966e-06, 1.30561966e-06, 1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00],[ 3.76660338e-08,  3.76660338e-08,  3.76660338e-08,  3.76660338e-08,  3.76660338e-08,  3.76660338e-08,  2.50695467e-01, 1.58799533e-03,  3.76660338e-08,  2.36558020e-02,  3.76660338e-08,  3.76660338e-08,  2.80799530e-02,  4.58606798e-03,  5.48611686e-04,  3.93379554e-02,  8.56384358e-05,  5.68678835e-04, 1.00000000e+00,  2.50474433e-03,  3.76660338e-08,  4.63009700e-02,  5.77758125e-04,  3.76660338e-08, 1.34998322e-01,  2.40379455e-03,  3.76660338e-08,  2.82924414e-01,  3.76660338e-08,  3.76660338e-08,  3.76660338e-08,  3.76660338e-08,  3.76660338e-08, 1.40858740e-01,  2.58492120e-03,  5.46969677e-05,  4.48997974e-01,  2.07720269e-02,  3.76660338e-08, 1.83602989e-01,  3.05922353e-03,  2.59475969e-03,  4.80189212e-02,  3.76660338e-08,  7.62035663e-04,  2.60330532e-02,  5.20471251e-03,  3.76660338e-08,  4.62187022e-01,  2.31952332e-02,  3.76660338e-08,  9.97222736e-02,  6.20783214e-03,  9.76828043e-04,  4.34288345e-02, 1.76396072e-02,  4.92472784e-04,  3.44145507e-01, 1.68212205e-02, 1.48166821e-03,  8.96460097e-03, 1.24113020e-02,  4.11120988e-03, 1.61219016e-02,  2.04241890e-02,  4.32268018e-03,  9.22769867e-03,  3.26256901e-02,  7.47632049e-03, 1.98462903e-02, 1.89055130e-02,  5.05550066e-03,  3.76660338e-08, 1.07050920e-02, 1.77569815e-03, 1.93973295e-02,  2.70360485e-02,  5.39585389e-03,  5.74687012e-02, 1.47813067e-01,  2.49316188e-04, 1.98688023e-02,  4.90318649e-02,  9.28638410e-03,  3.76660338e-08,  3.23148519e-02,  3.76660338e-08,  3.59409638e-02, 1.14538908e-01,  7.03968201e-03,  3.76660338e-08,  2.00876687e-02,  6.02964952e-04,  5.68345711e-02, 1.30260676e-01,  9.17473994e-03,  3.76660338e-08, 1.55909248e-02,  2.78891926e-03,  4.69292887e-03,  4.47391197e-02, 1.12501197e-02,  3.76660338e-08,  8.89303070e-03, 1.70717540e-03,  3.76660338e-08,  3.86724174e-02, 1.09867472e-02,  3.76660338e-08,  2.42868122e-02,  3.92633677e-03,  3.76660338e-08,  3.09334397e-02, 1.04412995e-02,  3.76660338e-08, 1.21242395e-02,  8.08015559e-03,  3.76660338e-08,  5.33831865e-02, 1.18374992e-02,  3.76660338e-08, 1.69302709e-03,  4.60901484e-03,  3.76660338e-08,  2.31505688e-02, 1.12411221e-02,  3.76660338e-08,  2.01518238e-02, 1.10269720e-02,  3.76660338e-08,  3.94932888e-02, 1.37634594e-02,  3.76660338e-08,  3.76660338e-08,  5.32324053e-03,  3.76660338e-08,  7.73404678e-03, 1.06563978e-02,  3.76660338e-08, 1.99553631e-02, 1.36006698e-02,  3.76660338e-08, 1.83263253e-02, 1.42691750e-02,  3.76660338e-08,  3.76660338e-08, 1.02823097e-02,  3.76660338e-08,  3.69297601e-02, 1.07001616e-02,  3.76660338e-08,  3.76660338e-08,  3.96117568e-03,  3.76660338e-08,  6.44991174e-03,  7.30404584e-03,  3.76660338e-08,  4.72540176e-03, 1.68729406e-02,  3.76660338e-08,  2.28020940e-02,  8.29418283e-03,  3.76660338e-08,  2.01926082e-02,  2.10955553e-02,  3.76660338e-08, 1.16227111e-02,  2.59856191e-02, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00],[ 4.36803438e-02,  6.85508255e-08,  6.85508255e-08,  6.85508255e-08,  9.51879600e-04,  6.85508255e-08,  7.16424525e-01,  6.85508255e-08,  3.92355537e-03,  9.71910171e-03,  6.85508255e-08, 1.00806123e-03, 1.66995600e-01,  6.85508255e-08,  6.85508255e-08, 1.31125725e-03,  9.24507435e-03,  6.85508255e-08, 1.22361846e-01,  6.85508255e-08,  2.44313199e-03, 1.79314818e-02,  5.95971663e-03,  6.85508255e-08, 1.05770797e-01,  6.85508255e-08,  6.85508255e-08,  2.85818763e-02, 1.22836221e-03,  6.85508255e-08,  6.94924518e-02,  6.85508255e-08,  6.85508255e-08,  3.62477303e-02,  3.12973931e-03,  6.85508255e-08, 1.37749454e-02,  6.85508255e-08,  6.85508255e-08,  4.00189087e-02,  9.55010671e-03,  2.63245864e-04,  6.85508255e-08, 1.89441058e-03,  3.35788913e-03,  4.32675742e-02,  2.33003218e-02,  2.62532732e-03,  6.94983685e-03,  9.66161303e-03,  5.42145083e-03,  4.36797030e-02,  4.39000651e-02,  5.88952564e-03,  5.29005006e-03, 1.24580963e-02,  3.10754380e-03,  2.30592974e-02,  5.50881326e-02,  6.98177703e-03, 1.96804269e-03, 1.36261601e-02,  7.73215992e-03, 1.20156743e-02,  9.54127908e-02,  9.13324114e-03,  6.85508255e-08, 1.61256045e-02, 1.09605370e-02,  6.85508255e-08,  6.32938594e-02, 1.09771658e-02, 1.07953837e-03, 1.95469242e-02, 1.06081348e-02,  6.85508255e-08,  2.54397154e-01,  2.62324512e-02,  6.85508255e-08,  2.03734934e-02,  9.25426930e-03,  6.85508255e-08,  7.43952036e-01,  6.94238544e-02,  6.85508255e-08,  2.03266647e-02, 1.23650748e-02,  6.85508255e-08,  8.73997331e-01,  9.41491872e-02,  6.85508255e-08, 1.62920207e-02, 1.07164793e-02,  6.85508255e-08,  8.51472557e-01, 1.10729881e-01,  6.85508255e-08,  2.13813093e-02, 1.28806438e-02,  6.85508255e-08,  8.29885602e-01,  9.10331160e-02,  6.85508255e-08,  2.86684763e-02, 1.89147685e-02,  6.85508255e-08, 1.00000000e+00,  7.85843134e-02,  6.85508255e-08,  9.54727829e-03,  2.34739818e-02,  6.85508255e-08,  3.26638132e-01,  7.55593106e-02, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00],[ 4.36803438e-02,  6.85508255e-08,  6.85508255e-08,  6.85508255e-08,  9.51879600e-04,  6.85508255e-08,  7.16424525e-01,  6.85508255e-08,  3.92355537e-03,  9.71910171e-03,  6.85508255e-08, 1.00806123e-03, 1.66995600e-01,  6.85508255e-08,  6.85508255e-08, 1.31125725e-03,  9.24507435e-03,  6.85508255e-08, 1.22361846e-01,  6.85508255e-08,  2.44313199e-03, 1.79314818e-02,  5.95971663e-03,  6.85508255e-08, 1.05770797e-01,  6.85508255e-08,  6.85508255e-08,  2.85818763e-02, 1.22836221e-03,  6.85508255e-08,  6.94924518e-02,  6.85508255e-08,  6.85508255e-08,  3.62477303e-02,  3.12973931e-03,  6.85508255e-08, 1.37749454e-02,  6.85508255e-08,  6.85508255e-08,  4.00189087e-02,  9.55010671e-03,  2.63245864e-04,  6.85508255e-08, 1.89441058e-03,  3.35788913e-03,  4.32675742e-02,  2.33003218e-02,  2.62532732e-03,  6.94983685e-03,  9.66161303e-03,  5.42145083e-03,  4.36797030e-02,  4.39000651e-02,  5.88952564e-03,  5.29005006e-03, 1.24580963e-02,  3.10754380e-03,  2.30592974e-02,  5.50881326e-02,  6.98177703e-03, 1.96804269e-03, 1.36261601e-02,  7.73215992e-03, 1.20156743e-02,  9.54127908e-02,  9.13324114e-03,  6.85508255e-08, 1.61256045e-02, 1.09605370e-02,  6.85508255e-08,  6.32938594e-02, 1.09771658e-02, 1.07953837e-03, 1.95469242e-02, 1.06081348e-02,  6.85508255e-08,  2.54397154e-01,  2.62324512e-02,  6.85508255e-08,  2.03734934e-02,  9.25426930e-03,  6.85508255e-08,  7.43952036e-01,  6.94238544e-02,  6.85508255e-08,  2.03266647e-02, 1.23650748e-02,  6.85508255e-08,  8.73997331e-01,  9.41491872e-02,  6.85508255e-08, 1.62920207e-02, 1.07164793e-02,  6.85508255e-08,  8.51472557e-01, 1.10729881e-01,  6.85508255e-08,  2.13813093e-02, 1.28806438e-02,  6.85508255e-08,  8.29885602e-01,  9.10331160e-02,  6.85508255e-08,  2.86684763e-02, 1.89147685e-02,  6.85508255e-08, 1.00000000e+00,  7.85843134e-02,  6.85508255e-08,  9.54727829e-03,  2.34739818e-02,  6.85508255e-08,  3.26638132e-01,  7.55593106e-02, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00],[ 1.33507783e-02,  7.42466781e-08,  7.42466781e-08,  7.42466781e-08,  7.42466781e-08,  7.42466781e-08,  5.12691915e-01,  7.42466781e-08,  7.42466781e-08, 1.57490838e-02,  7.42466781e-08,  7.42466781e-08, 1.90202713e-01,  7.42466781e-08,  7.42466781e-08,  9.44611710e-03, 1.02522923e-02,  3.29706294e-04,  2.10649371e-01,  7.42466781e-08,  2.79158470e-03,  3.41003872e-02,  7.71217886e-03, 1.12751010e-03, 1.63871214e-01,  7.42466781e-08,  7.42466781e-08,  4.15914990e-02,  4.21126699e-03,  7.78576185e-04, 1.14067286e-01,  7.42466781e-08,  7.42466781e-08,  4.68325317e-02,  6.89169252e-03,  9.07944050e-05,  2.68614274e-02, 1.22498663e-03,  7.42466781e-08,  5.46920560e-02, 1.65685266e-02, 1.19600957e-03,  9.45364416e-04,  3.08156200e-03,  7.10756937e-03,  6.96614757e-02,  4.84632403e-02,  4.13341122e-03, 1.45841083e-02, 1.20965196e-02,  8.94286390e-03,  5.90764657e-02,  9.08205658e-02,  8.10462702e-03, 1.10130655e-02, 1.63563676e-02,  5.95543534e-03,  2.81006638e-02, 1.12784833e-01,  9.51422937e-03,  4.29637684e-03, 1.89381558e-02, 1.04369372e-02, 1.54344644e-02, 1.85254738e-01, 1.28020179e-02,  7.42466781e-08,  2.26321556e-02, 1.55126117e-02,  7.42466781e-08,  8.24257508e-02, 1.84165705e-02,  7.42466781e-08,  2.69141234e-02, 1.47161670e-02,  7.42466781e-08,  3.67468923e-01,  3.52177322e-02,  7.42466781e-08,  2.56558657e-02, 1.14436569e-02,  7.42466781e-08,  9.27016556e-01,  6.33905232e-02,  7.42466781e-08,  2.32820418e-02, 1.59702096e-02,  7.42466781e-08, 1.00000000e+00,  8.59007686e-02,  7.42466781e-08, 1.38512654e-02, 1.56155871e-02,  7.42466781e-08,  6.55908525e-01,  9.02785882e-02,  7.42466781e-08,  2.14867573e-02, 1.81431361e-02,  7.42466781e-08,  8.44678044e-01, 1.46398157e-01,  7.42466781e-08,  2.61597596e-02,  2.53463499e-02,  7.42466781e-08,  7.35563338e-01, 1.24991022e-01,  7.42466781e-08, 1.20755769e-02,  2.86948662e-02,  7.42466781e-08,  3.24580312e-01, 1.62562191e-01, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00, -1.00000000e+00]],
    "SCORE":[50,40,51,2,6],
    "MASS":[142.07422, 1794.74092, 1973.8772, 1983.8772, 2173.8772]
}

df = pd.DataFrame(data, dtype='int32')

triton_client = grpcclient.InferenceServerClient(url=SERVER_GRPC,ssl=True)

CE_RANGE = range(5, 45)
models = []

grouped_charge_df = df.groupby("PRECURSOR_CHARGE")

for charge, df_charge in grouped_charge_df:
    top_10p_df = df_charge.sort_values(by="SCORE", ascending=False).iloc[:1000]
    nrow = len(top_10p_df)
    top_10p_df = pd.concat([top_10p_df for _ in CE_RANGE], axis=0)
    top_10p_df["ORIG_COLLISION_ENERGY"] = top_10p_df["COLLISION_ENERGY"]
    top_10p_df["COLLISION_ENERGY"] = np.repeat(CE_RANGE, nrow).astype('float32')
    top_10p_df.reset_index(inplace=True)
    nrow = len(top_10p_df)

    in_pep_seq = grpcclient.InferInput("peptide_sequences", [nrow, 1], "BYTES")
    in_pep_seq.set_data_from_numpy(np.array(top_10p_df["SEQUENCES"]).reshape(-1,1))

    in_charge = grpcclient.InferInput("precursor_charges", [nrow, 1], "INT32")
    in_charge.set_data_from_numpy(np.array(top_10p_df["PRECURSOR_CHARGE"]).reshape(-1,1))

    in_ces = grpcclient.InferInput("collision_energies", [nrow, 1], "FP32")
    in_ces.set_data_from_numpy(np.array(top_10p_df["COLLISION_ENERGY"]).reshape(-1,1))

    predictions = triton_client.infer(
        "Prosit_2023_intensity_TOF", inputs=[in_pep_seq, in_charge, in_ces],
        outputs=[grpcclient.InferRequestedOutput("intensities"), ],
    )

    top_10p_df["PREDICTED_INTENSITY"] = predictions.as_numpy("intensities").tolist()
    top_10p_df["SPECTRAL_ANGLE"] = top_10p_df[["INTENSITIES","PREDICTED_INTENSITY"]].apply(lambda x : get_spectral_angle(x), axis=1)
    top_10p_df["SPECTRAL_ANGLE"].fillna(0, inplace=True)
    groups = top_10p_df.groupby(by=["ORIG_COLLISION_ENERGY", "COLLISION_ENERGY", "MASS"])["SPECTRAL_ANGLE"].mean()
    groups_2 = groups.reset_index()
    ids = groups_2.groupby(["ORIG_COLLISION_ENERGY", "MASS"])["SPECTRAL_ANGLE"].transform(max) == groups_2["SPECTRAL_ANGLE"]
    calib_group = groups_2[ids]
    calib_group["delta_collision_energy"] = calib_group["COLLISION_ENERGY"] - calib_group["ORIG_COLLISION_ENERGY"]
    # Fit a linear model
    X = calib_group[["MASS"]] # input feature
    y = calib_group["delta_collision_energy"] # target variable
    ransac = RANSACRegressor(LinearRegression(), residual_threshold=1.5, random_state=42)
    ransac.fit(X, y)
    models.append(ransac)

